There is a lot of stuff in the script itself, and also in trunk/TODO

<Daniel> to be honest, I can't even figure out its command line
<Daniel> like Peter once told me: have it do the most useful, expected thing
without any command line ops
<Baron> Daniel, let's not put too much working to making it flexible etc, let's
just pick one "best" way without any options
<Daniel> giving the current log-parser no ops results in a flood of info
<Baron> right, exactly
<Daniel> aye
<Baron> --microslow is basically the magic ticket for the current version
<Baron> what can I say, it's less "done" than any other mk-tool and that's why
it's not really public yet
<Daniel> no problem. we'll get it more done.
<Baron> Daniel, there is also a lot of stuff lurking in the todo files, which I
use when I don't have enough time to fill out an issue report
<Daniel> Baron aye it's no problem. I've already taken note of it. 
<Daniel> it's going to get a thorough going-over, inside and out
<Baron> one other thing I am thinking about is histograms -- but I actually
wonder if this ought to be a different tool
<Baron> time-of-day, execution-time, frequency of execution... all very
interesting 
<Daniel> I'd suspect that'd be best for another tool specially if we can output
the results in tab-sep or csv
<Baron> well, the idea here is to know more about the queries -- only one ring
to rule them all.  I mean I want to slurp a logfile and that's it, it should
tell me what I need to know.
<Baron> For example, if query X is always around 4AM, I want to know that.
<Baron> This is very useful and important when auditing a server.
<Daniel> mmm
* Daniel thinks.
<Baron> So I think the histograms and other "pattern" data actually do belong in
the default output, the more I think about it.
* Daniel thinks...
<Daniel> an ascii histogram huh.
<Baron> What I think is the tool should have a flexible syntax for arguments,
but at the same time some shortcuts.  That's all --microslow is now.
<Baron> All the shortcuts do is set the options behind the scenes.
<Baron> Let's spec things out before we spend much time on this, this one is
important to spec first
<Daniel> indeed that's what I'm thinking. since, also, this will be a pretty big
code change, we should be really clear first on what we want, and how we want
it.
<Daniel> I think the mysqlsla-like reports are given, once we decide on the
particular format
<Daniel> that's like the default human output.
<Baron> yes, absolutely
<Baron> that's what issue 83 is all about
<Daniel> secondly, a tab-sep and csv is so easy and critical if we ever want to
graph or calc the results w/ some other app, we can easily implement that
<Daniel> --tab or --csv to auto-disable the human output
<Daniel> then, it seems we have a 3rd kind of output, almost a "graphical"
output
<Baron> histograms are *part of* the default human output
<Daniel> ok
<Daniel> so these kind of graphical outputs precede the per-query breakdowns
(the default mysqlsla-like output) ?
<Baron> Well, first we should output a summary of the whole log: query count,
total time, start/stop time, etc
<Baron> followed by histograms of queries per X and total time per X
<Baron> where X is probably per-hour
<Daniel> aye
<Baron> this is where I start waving my hands around, because I think it's hard
to say what's most useful; the tool needs to do something like "oh, I have only
4 hours of output, let me look for patterns by the minute"
<Baron> Again, if slow query X always runs at 5 past the hour, it indicates
something about it -- it's a cron job, for example

Request from Peter: For our "microslow" log I think it could be very helpful to
have an option to load it to some table (ie Archive) so it is easy to research
what is happening.

Add a --since option to discard all queries before a given time.
