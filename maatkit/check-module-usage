#!/usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use English qw(-no_match_vars);

require '../common/MaatkitTest.pm';

MaatkitTest->import(qw(load_file));

my %not_instantiated = (
   ServerSpecs    => 1,
   MaatkitCommon  => 1,
   Transformers   => 1,
);

# If you specify one program, it has to be given like ../mk-find/mk-find
my @progs = @ARGV;
if ( !@progs ) {
   @progs = <../mk-*/mk-*>;
}

foreach my $prog ( @progs ) {
   my ($base, $program) = $prog =~ m{([a-z-]+)/([a-z-]+)$};
   next unless $program;

   # Arg to load_file is relative to MAATKIT_TRUNK.
   my $contents = load_file("$base/$program");

   my %uses   = map  { $_ => 1 } $contents =~ m/new (\w+)/gm;
   my @unused = grep {
      my $unused = 0;
      if ( $not_instantiated{$_} ) {
         chomp(my $g = `grep -c '${_}::' $prog`);  # MaatkitCommon::_d
         chomp(my $i = `grep -c '${_}->import' $prog`);  # Transformers->import
         $g ||= 0;
         $i ||= 0;
         $unused = 1 if $g + $i == 0;
      }
      else {
         $unused = 1 unless $uses{$_};
      }
      $unused;
   } $contents =~ m/^# (\w+) package \d+/gm;

   if ( @unused ) {
      print "$program has unused modules:\n"
         . join('', map { "\t$_\n" } @unused);
   }
}

exit;
