

=back

=head1 INSTALLATION

Strictly speaking these tools require no installation; you should be able to
run them stand-alone.  However, on UNIX-ish systems you can use the standard
Perl installation sequence:

   cd <package directory>
   perl Makefile.PL
   make install

=head1 CONFIGURATION

Maatkit tools can read options from configuration files.  The configuration file
syntax is simple and direct, and bears some resemblances to the MySQL
command-line client tools.  The configuration files all follow the same
conventions.

Internally, what actually happens is that the lines are read from the file and
then added as command-line options and arguments to the Maatkit tool, so just
think of the configuration files as a way to write your command lines.

=head2 SYNTAX

The syntax of the files is as follows:

=over

=item *

Whitespace followed by a hash (#) sign signifies that the rest of the line is a
comment.  This is deleted.

=item *

Whitespace is stripped from the beginning and end of all lines.

=item *

Empty lines are ignored.

=item *

Each line is permitted to be in either of the following formats:

  option
  option=value

Whitespace around the equals sign is deleted during processing.

=item *

Only long options are recognized.

=item *

A line containing only two hyphens signals the end of option parsing.  Any
further lines are interpreted as additional arguments (not options) to the
program.

=back

=head2 FILES

The tools read several configuration files in order:

=over

=item 1.

The global Maatkit configuration file, /etc/maatkit/maatkit.conf.  All tools
read this file, so you should only add options to it that you want to apply to
all Maatkit tools.

=item 2.

The global tool configuration file, /etc/maatkit/[toolname].conf.  This file is
named after the specific tool you're using, so you can add options that apply
only to that tool.

=item 3.

The user's own Maatkit configuration file, $HOME/.maatkit.conf.  All tools read
this file, so you should only add options to it that you want to apply to all
Maatkit tools.

=item 4.

The user's tool configuration file, $HOME/.[toolname].conf.  This file is named
after the specific tool you're using, so you can add options that apply only to
that tool.

=back

=head2 SPECIFYING CONFIGURATION FILES

There is a special --config option, which lets you specify which configuration
files Maatkit should read.  You specify a comma-separated list of files.
However, its behavior is not like other command-line options.  It must be given
B<first> on the command line, before any other options.  If you try to specify
it anywhere else, it will cause an error.  Also, you cannot specify
--config=/path/to/file; you must specify the option and the path to the file(s)
separated by whitespace, without an equals-sign between them, e.g.

  --config /path/to/file

If you don't want any configuration files at all, specify C<--config ''> to
provide an empty list of files.

=head1 DSN (DATA SOURCE NAME) SPECIFICATIONS

Maatkit uses DSNs to specify how to create a DBD connection to a MySQL server.
The maatkit tools that have command-line arguments such as -u or -p use them to
create a DSN behind the scenes, then use the DSN to connect to MySQL.

A DSN is a string of key=value parts separated by commas.  The possible keys are
shown later in this document.  You can also get a quick synopsis from the --help
output of many of the maatkit tools.

=head2 PARTS

Many of the tools add more parts to DSNs for special purposes, and sometimes
override parts to make them do something slightly different.  However, all the
tools support at least the following:

=over

=item A

Specifies the default character set for the connection.

Enables character set settings in Perl and MySQL.  If the value is C<utf8>, sets
Perl's binmode on STDOUT to utf8, passes the C<mysql_enable_utf8> option to
DBD::mysql, and runs C<SET NAMES UTF8> after connecting to MySQL.  Any other
value sets binmode on STDOUT without the utf8 layer, and runs C<SET NAMES> after
connecting to MySQL.

Unfortunately, there is no way from within Perl itself to specify the client
library's character set.  C<SET NAMES> only affects the server; if the client
library's settings don't match, there could be problems.  You can use the
defaults file to specify the client library's character set, however.  See the
description of the F part below.

=item D

Specifies the connection's default database.

=item F

Specifies a defaults file the mysql client library (the C client library used by
DBD::mysql, I<not maatkit itself>) should read.  The maatkit tools all read the
[client] section within the defaults file.  If you omit this, the standard
defaults files will be read in the usual order.  "Standard" varies from system
to system, because the filenames to read are compiled into the client library.
On Debian systems, for example, it's usually /etc/mysql/my.cnf then ~/.my.cnf.
If you place the following into ~/.my.cnf, maatkit will Do The Right Thing:

 [client]
 user=your_user_name
 pass=secret

Omitting the F part is usually the right thing to do.  As long as you have
configured your ~/.my.cnf correctly, that will result in maatkit connecting
automatically without needing a username or password.

You can also specify a default character set in the defaults file.  Unlike the
L<"A"> part described above, this will actually instruct the client library
(DBD::mysql) to change the character set it uses internally, which cannot be
accomplished any other way as far as I know, except for C<utf8>.

=item P

Port number to use for the connection.  Note that the usual special-case
behaviors apply: if you specify C<localhost> as your hostname on Unix systems,
the connection actually uses a socket file, not a TCP/IP connection, and thus
ignores the port.

=item S

Socket file to use for the connection (on Unix systems).

=item h

Hostname or IP address for the connection.

=item p

Password to use when connecting.

=item u

User for login if not current user.

=back

=head2 BAREWORD

Many of the tools will let you specify a DSN as a single word, without any
key=value syntax.  This is called a 'bareword'.  How this is handled is
tool-specific, but it is usually interpreted as the L<"h"> part.  The tool's
--help output will tell you the behavior for that tool.

=head2 DEFAULT PROPAGATION

Many tools will let you propagate values from one DSN to the next, so you don't
have to specify all the parts for each DSN.  For example, if you want to specify
a username and password for each DSN, you can connect to three hosts as follows:

 h=host1,u=fred,p=wilma host2 host3

This is tool-specific.

=head1 SYSTEM REQUIREMENTS

You need Perl, DBI, DBD::mysql, and some core packages that ought to be
installed in any reasonably new version of Perl.

=head1 BUGS

If you find bugs, need features, etc please use the bug tracker, forums, and
mailing lists at http://code.google.com/p/maatkit/

=head1 COPYRIGHT, LICENSE AND WARRANTY

This program is copyright (c) 2007 Baron Schwartz and others.  Feedback and
improvements are welcome.

THIS PROGRAM IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, version 2; OR the Perl Artistic License.  On UNIX and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA  02111-1307  USA.

=head1 AUTHOR

See the individual program's documentation for details.

=head1 VERSION

This manual page documents Distrib @DISTRIB@ $Revision: 534 $.

=cut
