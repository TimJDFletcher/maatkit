#!/usr/bin/perl

# Purpose: bump version number of all tools.  With the --new option, only bumps
# the version number of tools that have an "unfinished" Changelog.

use strict;
use warnings FATAL => 'all';

my $new = grep { m/--new/ } @ARGV;
@ARGV = grep { $_ !~ m/--new/ } @ARGV;

my $comment = shift @ARGV;
die "Comment please?" unless $comment || $new;

my @packages = @ARGV;
if ( !@packages ) {
  @packages = sort split(/\n/, `cat packages`);
}

foreach my $package ( @packages ) {
   # Find the desired version number and changelog.
   my $file;
   open($file, "<", "../$package/Changelog")
      or die $!;
   my $contents = do { local $/ = undef; <$file>; };
   close $file;
   die "$package has a tab in its changelog"
      if $contents =~ m/\t/;
   if ( $new ) { # Skip ones that have a version at the top of the file
      next if $contents =~ m/\AChangelog[^:]*:\n+20/;
   }
   my ($log) = $contents =~ m/^(200.*?)(?=^200|\Z)/sm;
   die "help: $package has no log?" unless $log;
   my ($pre, $ver) = $log =~ m/^\d{4}-\d\d-\d\d: version (\d+\.\d+\.)(\d+)/;
   die "Can't find version in $package" unless $ver;
   $ver++;
   if ( $comment ) {
      # Add the comment
      `sed -i -e "2a \\   * $comment" ../$package/Changelog`;
   }
   # Add a blank line
   `sed -i -e '/Changelog/G' ../$package/Changelog`;
   # Add the version number
   `sed -i -e "2a \$(date +%F): version $pre$ver" ../$package/Changelog`;
}
