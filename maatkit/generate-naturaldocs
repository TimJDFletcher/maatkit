#!/bin/sh

# This script automates the process of generating the Maatkit code
# documentation using Natural Docs.  The mk code docu is in its own
# directory, svn/docs.  The docs dir does not have the code, just
# the docs.  Therefore, it's necessary that another env var point
# to your local copy of the mk code docu; that env var is MAATKIT_DOCS.
# The standard MAATKIT_WORKING_COPY env var needs to be set, too,
# because the code in that dir is used to generate the natural docs
# in MAATKIT_DOCS.

if [ -z "$MAATKIT_DOCS" ]; then
   echo "The MAATKIT_DOCS environment variable is not set."
   exit 1;
fi

nd="$MAATKIT_DOCS/naturaldocs/NaturalDocs";
project="$MAATKIT_DOCS/nd-config/";
source="$MAATKIT_DOCS/nd-temp/"
output="$MAATKIT_DOCS/code/"

copy_code_to_source() {
   if [ ! -d $source ]; then
      mkdir $source
      mkdir $source/modules
      mkdir $source/tools
   fi

   cp $MAATKIT_WORKING_COPY/common/*.pm $source/modules

   for tool in $MAATKIT_WORKING_COPY/mk-*/mk-*; do
      tool=`basename $tool`
      $MAATKIT_WORKING_COPY/maatkit/extract-tool-package $tool > $source/tools/$tool
   done;
}

tool=$1
if [ -n "$tool" ]; then
   if [ -f "$MAATKIT_WORKING_COPY/common/$tool" ]; then
      echo "Generating Natural Docs output for $tool..."
      cp "$MAATKIT_WORKING_COPY/common/$tool" $source/modules/
   elif [ -f "$MAATKIT_WORKING_COPY/$tool/$tool" ]; then
      echo "Generating Natural Docs output for $tool..."
      $MAATKIT_WORKING_COPY/maatkit/extract-tool-package $tool > $source/tools/$tool
   else
      echo "$tool is not a module or a tool";
      exit 1;
   fi
else
   echo "Generating Natural Docs output for the entire Maatkit code base..."
   copy_code_to_source
fi

extra_opts=""
if [ -f "$MAATKIT_DOCS/rebuild" ]; then
   extra_opts="$extra_opts --rebuild"
fi

$nd --project $project  --source $source -o HTML $output $extra_opts

rm -rf "$MAATKIT_DOCS/rebuild" >/dev/null

if [ ! -f "$MAATKIT_DOCS/keep-nd-temp" ]; then
   rm -rf $source >/dev/null
fi

exit
