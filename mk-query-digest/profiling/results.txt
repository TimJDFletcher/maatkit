
Revision 2810
36.11user 48.65system 1:25.41elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+72312outputs (0major+14122minor)pagefaults 0swaps
     1	../mk-log-parser:1093 8.12455 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-log-parser:1623 3.86954 330270: if ( !$got_ts
     3	../mk-log-parser:1669 1.42250 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-log-parser:1591 1.23476 93741: if ( $stmt =~ s{
     5	../mk-log-parser:1098 1.14855 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     6	../mk-log-parser:1619 1.11801 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-log-parser:1621 1.09403 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/oi) {
     8	../mk-log-parser:1587 0.98598 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-log-parser:1084 0.88259 46726: $query =~ s/$olc_re//go;
    10	../mk-log-parser:1687 0.83267 93741: my $event = { @properties };
    11	../mk-log-parser:1693 0.78750 93741: last EVENT unless @pending;
    12	../mk-log-parser:1618 0.78497 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-log-parser:1984 0.70929 93690: [at line 5 inside eval] ||= { map { $_ => {} } @attrs };
    14	../mk-log-parser:1101 0.60414 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    15	../mk-log-parser:1103 0.53351 46726: $query =~ s{
    16	../mk-log-parser:1984 0.53110 93690: [at line 6 inside eval] my @st_fc = @{$fp_ds}{@attrs};
    17	../mk-log-parser:1695 0.49552 93720: return $num_events;
    18	../mk-log-parser:1609 0.45780 93741: $stmt =~ s/;\n#?\Z//;
    19	../mk-log-parser:1102 0.44726 46726: $query = lc $query;
    20	../mk-log-parser:1608 0.44573 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    21	../mk-log-parser:1690 0.41936 187482: last CALLBACK unless $callback->($event);
    22	../mk-log-parser:1984 0.39967 93690: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    23	../mk-log-parser:1072 0.38327 93741: my ( $self, $query ) = @_;
    24	../mk-log-parser:1581 0.37905 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    25	../mk-log-parser:1984 0.37897 93690: [at line 107 inside eval] $global->{max} = $val if !defined $global->{max} || $val gt $global->{max};
    26	../mk-log-parser:3335 0.32570 93741: return 1; # required to keep callback chain going
    27	../mk-log-parser:1577 0.31651 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    28	../mk-log-parser:1076 0.31580 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query
    29	../mk-log-parser:1588 0.29855 93741: my @properties = ('cmd', 'Query', 'pos_in_log', $pos_in_log);
    30	../mk-log-parser:3154 0.29855 93741: $event->{fingerprint} = $fingerprint;

Revision 2919
46.74user 70.33system 1:57.95elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
195880inputs+111096outputs (1major+15475minor)pagefaults 0swaps
     1	../mk-log-parser:1155 8.19669 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-log-parser:1891 4.71539 656187: my $class_attrib  = $self->{result_class}->{$group_by}->{$attrib} ||= {};
     3	../mk-log-parser:1688 4.22971 330270: if ( !$got_ts
     4	../mk-log-parser:1892 1.64964 656187: my $global_attrib = $self->{result_globals}->{$attrib} ||= {};
     5	../mk-log-parser:1893 1.61037 656187: my $handler = $self->{handlers}->{ $attrib };
     6	../mk-log-parser:1904 1.48911 656187: $handler->($event, $class_attrib, $global_attrib);
     7	../mk-log-parser:1734 1.47036 330270: if ( !$found_arg && $pos == $len ) {
     8	../mk-log-parser:1894 1.32128 656187: if ( !$handler ) {
     9	../mk-log-parser:1656 1.27455 93741: if ( $stmt =~ s{
    10	../mk-log-parser:1903 1.25998 656187: next ATTRIB unless $handler;
    11	../mk-log-parser:1160 1.16364 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
    12	../mk-log-parser:1684 1.12764 377133: my $line = $1;          # Necessary for /g and pos() to work.
    13	../mk-log-parser:1652 1.11920 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    14	../mk-log-parser:1686 1.08842 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/oi) {
    15	../mk-log-parser:1146 0.91048 46726: $query =~ s/$olc_re//go;
    16	../mk-log-parser:1757 0.90277 93741: last EVENT unless @pending;
    17	../mk-log-parser:1752 0.86003 93741: my $event = { @properties };
    18	../mk-log-parser:1683 0.80257 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    19	../mk-log-parser:1754 0.63316 281223: last unless $event = $callback->($event);
    20	../mk-log-parser:1163 0.62289 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    21	../mk-log-parser:1759 0.56729 93720: return $num_events;
    22	../mk-log-parser:1166 0.53052 46726: $query =~ s{
    23	../mk-log-parser:1673 0.48444 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    24	../mk-log-parser:2029 0.47867 93741: [at line 24 inside eval] ++$global->{all}->[ $idx > NUM_BUCK ? NUM_BUCK : $idx ];
    25	../mk-log-parser:1674 0.47785 93741: $stmt =~ s/;\n#?\Z//;
    26	../mk-log-parser:1164 0.45798 46726: $query = lc $query;
    27	../mk-log-parser:1132 0.40571 93741: my ( $self, $query ) = @_;
    28	../mk-log-parser:1890 0.38182 93741: foreach my $attrib ( keys %{$self->{attributes}} ) {
    29	../mk-log-parser:1646 0.37975 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    30	../mk-log-parser:1642 0.35587 93720: my ( $self, $fh, $misc, @callbacks ) = @_;

Revision 2972
46.43user 72.84system 1:59.74elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
184inputs+115408outputs (1major+15470minor)pagefaults 0swaps
     1	../mk-query-digest:1158 7.78335 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-query-digest:1943 4.64022 656187: my $class_attrib  = $self->{result_class}->{$val}->{$attrib} ||= {};
     3	../mk-query-digest:1738 4.04822 330270: if ( !$got_ts
     4	../mk-query-digest:1944 1.64977 656187: my $global_attrib = $self->{result_globals}->{$attrib} ||= {};
     5	../mk-query-digest:1945 1.57666 656187: my $handler = $self->{handlers}->{ $attrib };
     6	../mk-query-digest:1956 1.49958 656187: $handler->($event, $class_attrib, $global_attrib);
     7	../mk-query-digest:1942 1.47923 656187: foreach my $val ( ref $group_by ? @$group_by : ($group_by) ) {
     8	../mk-query-digest:1784 1.38555 330270: if ( !$found_arg && $pos == $len ) {
     9	../mk-query-digest:1946 1.31005 656187: if ( !$handler ) {
    10	../mk-query-digest:1955 1.29441 656187: next GROUPBY unless $handler;
    11	../mk-query-digest:1706 1.23686 93741: if ( $stmt =~ s{
    12	../mk-query-digest:1734 1.15786 377133: my $line = $1;          # Necessary for /g and pos() to work.
    13	../mk-query-digest:1163 1.12268 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
    14	../mk-query-digest:1736 1.07612 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/oi) {
    15	../mk-query-digest:1702 1.02631 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    16	../mk-query-digest:1807 0.88137 93741: last EVENT unless @pending;
    17	../mk-query-digest:1149 0.87938 46726: $query =~ s/$olc_re//go;
    18	../mk-query-digest:1802 0.84345 93741: my $event = { @properties };
    19	../mk-query-digest:1733 0.77968 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    20	../mk-query-digest:1804 0.63095 281223: last unless $event = $callback->($event);
    21	../mk-query-digest:1166 0.60150 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    22	../mk-query-digest:1809 0.52615 93720: return $num_events;
    23	../mk-query-digest:1169 0.52430 46726: $query =~ s{
    24	../mk-query-digest:2089 0.50641 93741: [at line 24 inside eval] ++$global->{all}->[ $idx > NUM_BUCK ? NUM_BUCK : $idx ];
    25	../mk-query-digest:1723 0.47284 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    26	../mk-query-digest:1724 0.46897 93741: $stmt =~ s/;\n#?\Z//;
    27	../mk-query-digest:1167 0.43735 46726: $query = lc $query;
    28	../mk-query-digest:1135 0.40189 93741: my ( $self, $query ) = @_;
    29	../mk-query-digest:1940 0.38611 93741: foreach my $attrib ( keys %{$self->{attributes}} ) {
    30	../mk-query-digest:2089 0.37923 93008: [at line 14 inside eval] ++$class->{unq}->{$val};

Revision 3054
48.62user 73.72system 2:03.44elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
195848inputs+117624outputs (1major+15465minor)pagefaults 0swaps
     1	../mk-query-digest:1175 8.14377 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-query-digest:1689 4.70961 656187: my $class_attrib  = $self->{result_class}->{$val}->{$attrib} ||= {};
     3	../mk-query-digest:1541 4.01715 330270: if ( !$got_ts
     4	../mk-query-digest:1690 1.65165 656187: my $global_attrib = $self->{result_globals}->{$attrib} ||= {};
     5	../mk-query-digest:1691 1.61234 656187: my $handler = $self->{handlers}->{ $attrib };
     6	../mk-query-digest:1702 1.48116 656187: $handler->($event, $class_attrib, $global_attrib);
     7	../mk-query-digest:1688 1.47027 656187: foreach my $val ( ref $group_by ? @$group_by : ($group_by) ) {
     8	../mk-query-digest:1582 1.45438 330270: if ( !$found_arg && $pos == $len ) {
     9	../mk-query-digest:1518 1.40138 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
    10	../mk-query-digest:1692 1.31614 656187: if ( !$handler ) {
    11	../mk-query-digest:1701 1.26002 656187: next GROUPBY unless $handler;
    12	../mk-query-digest:1180 1.16787 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
    13	../mk-query-digest:1514 1.13602 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    14	../mk-query-digest:1537 1.13328 377133: my $line = $1;          # Necessary for /g and pos() to work.
    15	../mk-query-digest:1539 1.09800 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    16	../mk-query-digest:1612 0.95072 93741: last EVENT unless @pending;
    17	../mk-query-digest:1166 0.91152 46726: $query =~ s/$olc_re//go;
    18	../mk-query-digest:1607 0.89853 93741: my $event = { @properties };
    19	../mk-query-digest:1536 0.80942 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    20	../mk-query-digest:1609 0.62934 281223: last unless $event = $callback->($event);
    21	../mk-query-digest:1183 0.62371 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    22	../mk-query-digest:1186 0.52908 46726: $query =~ s{
    23	../mk-query-digest:1614 0.52578 93720: return $num_events;
    24	../mk-query-digest:1835 0.50216 93741: [at line 24 inside eval] ++$global->{all}->[ $idx > NUM_BUCK ? NUM_BUCK : $idx ];
    25	../mk-query-digest:1526 0.49336 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    26	../mk-query-digest:1527 0.46181 93741: $stmt =~ s/;\n#?\Z//;
    27	../mk-query-digest:1184 0.43219 46726: $query = lc $query;
    28	../mk-query-digest:1152 0.40988 93741: my ( $self, $query ) = @_;
    29	../mk-query-digest:1686 0.40722 93741: foreach my $attrib ( keys %{$self->{attributes}} ) {
    30	../mk-query-digest:1835 0.38780 93741: [at line 24 inside eval] ++$global->{all}->[ $idx > NUM_BUCK ? NUM_BUCK : $idx ];

Revision 3054
41.37user 62.71system 1:44.73elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
196984inputs+92952outputs (4major+15534minor)pagefaults 0swaps
     1	../mk-query-digest:1175 8.51093 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-query-digest:1541 3.83865 330270: if ( !$got_ts
     3	../mk-query-digest:1582 1.43978 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1518 1.38436 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1180 1.15645 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     6	../mk-query-digest:1514 1.13241 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     7	../mk-query-digest:1537 1.12960 377133: my $line = $1;          # Necessary for /g and pos() to work.
     8	../mk-query-digest:1539 1.11187 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1612 0.92602 93741: last EVENT unless @pending;
    10	../mk-query-digest:1166 0.91473 46726: $query =~ s/$olc_re//go;
    11	../mk-query-digest:1607 0.90405 93741: my $event = { @properties };
    12	../mk-query-digest:1536 0.78626 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1742 0.70294 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1609 0.62577 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1183 0.61735 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1742 0.55713 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1186 0.52600 46726: $query =~ s{
    18	../mk-query-digest:1614 0.52576 93720: return $num_events;
    19	../mk-query-digest:1526 0.48474 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    20	../mk-query-digest:1527 0.45758 93741: $stmt =~ s/;\n#?\Z//;
    21	../mk-query-digest:1184 0.44723 46726: $query = lc $query;
    22	../mk-query-digest:1152 0.39993 93741: my ( $self, $query ) = @_;
    23	../mk-query-digest:1742 0.39842 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    24	../mk-query-digest:1508 0.39214 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    25	../mk-query-digest:1742 0.39190 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    26	../mk-query-digest:3711 0.35963 93741: return $event;
    27	../mk-query-digest:1557 0.35314 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    28	../mk-query-digest:1504 0.34486 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    29	../mk-query-digest:1185 0.32222 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs
    30	../mk-query-digest:1156 0.31852 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query

Revision 3054
39.61user 64.84system 1:45.29elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+96240outputs (0major+15524minor)pagefaults 0swaps
     1	../mk-query-digest:1179 7.91143 46726: $query =~ s{                          # Anything vaguely resembling numbers
     2	../mk-query-digest:1546 3.75398 330270: if ( !$got_ts
     3	../mk-query-digest:1587 1.36414 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1523 1.36412 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1542 1.16519 377133: my $line = $1;          # Necessary for /g and pos() to work.
     6	../mk-query-digest:1185 1.12846 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     7	../mk-query-digest:1544 1.11860 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     8	../mk-query-digest:1519 1.03894 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-query-digest:1169 0.88345 46726: $query =~ s/$olc_re//go;
    10	../mk-query-digest:1612 0.85980 93741: my $event = { @properties };
    11	../mk-query-digest:1617 0.83795 93741: last EVENT unless @pending;
    12	../mk-query-digest:1541 0.77685 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1747 0.68794 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1614 0.62446 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1188 0.60651 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1747 0.56144 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1191 0.51391 46726: $query =~ s{                          # Collapse IN and VALUES lists
    18	../mk-query-digest:1531 0.47475 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    19	../mk-query-digest:1532 0.45743 93741: $stmt =~ s/;\n#?\Z//;
    20	../mk-query-digest:1619 0.45303 93720: return $num_events;
    21	../mk-query-digest:1189 0.43750 46726: $query = lc $query;
    22	../mk-query-digest:1747 0.39525 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    23	../mk-query-digest:1155 0.38863 93741: my ( $self, $query ) = @_;
    24	../mk-query-digest:1747 0.38704 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    25	../mk-query-digest:1513 0.37653 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    26	../mk-query-digest:1562 0.35572 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    27	../mk-query-digest:3716 0.35116 93741: return $event;
    28	../mk-query-digest:1509 0.34840 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    29	../mk-query-digest:1159 0.31730 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query
    30	../mk-query-digest:1190 0.31429 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs

Revision 3054
35.93user 63.45system 1:40.38elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+95688outputs (0major+15539minor)pagefaults 0swaps
     1	../mk-query-digest:1539 3.83490 330270: if ( !$got_ts
     2	../mk-query-digest:1175 3.77261 46726: $query =~ s{                          # Anything vaguely resembling numbers
     3	../mk-query-digest:1580 1.44587 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1516 1.35643 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1178 1.14661 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     6	../mk-query-digest:1535 1.10959 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1537 1.09101 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     8	../mk-query-digest:1512 1.00040 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-query-digest:1610 0.90244 93741: last EVENT unless @pending;
    10	../mk-query-digest:1166 0.88396 46726: $query =~ s/$olc_re//go;
    11	../mk-query-digest:1605 0.85544 93741: my $event = { @properties };
    12	../mk-query-digest:1534 0.77840 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1740 0.72397 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1607 0.61663 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1181 0.60323 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1740 0.54398 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1184 0.50598 46726: $query =~ s{                          # Collapse IN and VALUES lists
    18	../mk-query-digest:1524 0.47061 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    19	../mk-query-digest:1525 0.45642 93741: $stmt =~ s/;\n#?\Z//;
    20	../mk-query-digest:1612 0.45142 93720: return $num_events;
    21	../mk-query-digest:1182 0.43782 46726: $query = lc $query;
    22	../mk-query-digest:1740 0.38876 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    23	../mk-query-digest:1152 0.38644 93741: my ( $self, $query ) = @_;
    24	../mk-query-digest:1740 0.38160 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    25	../mk-query-digest:3709 0.37812 93741: return $event;
    26	../mk-query-digest:1506 0.36644 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    27	../mk-query-digest:1555 0.34665 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    28	../mk-query-digest:1502 0.33798 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    29	../mk-query-digest:1183 0.33744 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs
    30	../mk-query-digest:1156 0.31475 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query

Revision 3054
37.23user 63.34system 1:41.49elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+95688outputs (0major+15537minor)pagefaults 0swaps
     1	../mk-query-digest:1174 5.88616 46726: $query =~ s/[\d+-][\da-f.xb+-]*/?/gi; # Anything resembling numbers
     2	../mk-query-digest:1536 3.69182 330270: if ( !$got_ts
     3	../mk-query-digest:1577 1.35277 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1513 1.33907 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1532 1.13021 377133: my $line = $1;          # Necessary for /g and pos() to work.
     6	../mk-query-digest:1175 1.11907 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     7	../mk-query-digest:1534 1.09454 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     8	../mk-query-digest:1509 0.99019 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-query-digest:1166 0.87346 46726: $query =~ s/$olc_re//go;
    10	../mk-query-digest:1602 0.85783 93741: my $event = { @properties };
    11	../mk-query-digest:1607 0.78102 93741: last EVENT unless @pending;
    12	../mk-query-digest:1531 0.76184 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1737 0.66946 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1604 0.61466 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1178 0.59516 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1737 0.53597 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1181 0.50697 46726: $query =~ s{                          # Collapse IN and VALUES lists
    18	../mk-query-digest:1521 0.45898 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    19	../mk-query-digest:1522 0.45104 93741: $stmt =~ s/;\n#?\Z//;
    20	../mk-query-digest:1609 0.43374 93720: return $num_events;
    21	../mk-query-digest:1179 0.43261 46726: $query = lc $query;
    22	../mk-query-digest:1737 0.41424 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    23	../mk-query-digest:1552 0.41060 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    24	../mk-query-digest:1152 0.37408 93741: my ( $self, $query ) = @_;
    25	../mk-query-digest:1737 0.37079 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    26	../mk-query-digest:1503 0.35888 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    27	../mk-query-digest:3706 0.34106 93741: return $event;
    28	../mk-query-digest:1499 0.33896 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    29	../mk-query-digest:1180 0.33416 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs
    30	../mk-query-digest:1156 0.32259 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query

Revision 3054
37.49user 63.05system 1:41.33elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+95688outputs (0major+15540minor)pagefaults 0swaps
     1	../mk-query-digest:1174 5.25824 46726: $query =~ s/[\d+-][\da-f.xb+-]*/?/g; # Anything resembling numbers
     2	../mk-query-digest:1536 3.74883 330270: if ( !$got_ts
     3	../mk-query-digest:1577 1.41062 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1513 1.35447 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1175 1.11537 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     6	../mk-query-digest:1532 1.10317 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1534 1.07002 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     8	../mk-query-digest:1509 0.99199 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-query-digest:1607 0.89282 93741: last EVENT unless @pending;
    10	../mk-query-digest:1602 0.88065 93741: my $event = { @properties };
    11	../mk-query-digest:1166 0.87949 46726: $query =~ s/$olc_re//go;
    12	../mk-query-digest:1531 0.77147 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1737 0.67635 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1604 0.61656 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1178 0.59540 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1737 0.54026 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1181 0.51242 46726: $query =~ s{                          # Collapse IN and VALUES lists
    18	../mk-query-digest:1609 0.47524 93720: return $num_events;
    19	../mk-query-digest:1521 0.47016 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    20	../mk-query-digest:1522 0.45507 93741: $stmt =~ s/;\n#?\Z//;
    21	../mk-query-digest:1179 0.44129 46726: $query = lc $query;
    22	../mk-query-digest:1152 0.40752 93741: my ( $self, $query ) = @_;
    23	../mk-query-digest:1737 0.38905 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    24	../mk-query-digest:1737 0.38079 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    25	../mk-query-digest:1552 0.36581 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    26	../mk-query-digest:1503 0.36527 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    27	../mk-query-digest:1499 0.35608 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    28	../mk-query-digest:3706 0.34673 93741: return $event;
    29	../mk-query-digest:1180 0.33315 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs
    30	../mk-query-digest:1156 0.31466 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query

Revision 3054
36.41user 63.29system 1:40.82elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+95688outputs (0major+15542minor)pagefaults 0swaps
     1	../mk-query-digest:1174 3.88098 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g; # Anything resembling numbers
     2	../mk-query-digest:1536 3.75511 330270: if ( !$got_ts
     3	../mk-query-digest:1577 1.45069 330270: if ( !$found_arg && $pos == $len ) {
     4	../mk-query-digest:1513 1.36765 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1175 1.13279 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     6	../mk-query-digest:1532 1.11067 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1534 1.09508 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     8	../mk-query-digest:1509 1.00489 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
     9	../mk-query-digest:1166 0.89674 46726: $query =~ s/$olc_re//go;
    10	../mk-query-digest:1607 0.89563 93741: last EVENT unless @pending;
    11	../mk-query-digest:1602 0.84605 93741: my $event = { @properties };
    12	../mk-query-digest:1531 0.81706 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    13	../mk-query-digest:1737 0.68221 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    14	../mk-query-digest:1604 0.61719 281223: last unless $event = $callback->($event);
    15	../mk-query-digest:1178 0.61645 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    16	../mk-query-digest:1737 0.54017 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    17	../mk-query-digest:1181 0.51359 46726: $query =~ s{                          # Collapse IN and VALUES lists
    18	../mk-query-digest:1521 0.46969 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    19	../mk-query-digest:1522 0.46533 93741: $stmt =~ s/;\n#?\Z//;
    20	../mk-query-digest:1609 0.44777 93720: return $num_events;
    21	../mk-query-digest:1179 0.44488 46726: $query = lc $query;
    22	../mk-query-digest:1152 0.38843 93741: my ( $self, $query ) = @_;
    23	../mk-query-digest:1737 0.38334 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    24	../mk-query-digest:1737 0.38008 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    25	../mk-query-digest:1503 0.35775 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    26	../mk-query-digest:1552 0.35003 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    27	../mk-query-digest:3706 0.34103 93741: return $event;
    28	../mk-query-digest:1180 0.33843 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs
    29	../mk-query-digest:1499 0.33717 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    30	../mk-query-digest:1156 0.31485 93741: $query =~ m#/\*\w+\.\w+:\d/\d\*/#     # mk-table-checksum, etc query

Revision 3054
39.98user 71.36system 1:52.64elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+109240outputs (0major+15530minor)pagefaults 0swaps
     1	../mk-query-digest:1174 4.00303 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1545 3.57741 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     3	../mk-query-digest:1540 3.12047 330270: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+)/g;
     4	../mk-query-digest:1584 1.38444 330270: if ( !$found_arg && $pos == $len ) {
     5	../mk-query-digest:1513 1.36313 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     6	../mk-query-digest:1538 1.27137 330270: my ( $user, $host, $ip ) = $line =~ m/$slow_log_uh_line/o;
     7	../mk-query-digest:1532 1.15124 377133: my $line = $1;          # Necessary for /g and pos() to work.
     8	../mk-query-digest:1175 1.11768 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     9	../mk-query-digest:1534 1.09468 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    10	../mk-query-digest:1509 1.00087 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    11	../mk-query-digest:1542 0.91388 330270: my ($setting) = $line =~ m/^SET\s+([^;]*)/;
    12	../mk-query-digest:1166 0.88906 46726: $query =~ s/$olc_re//go;
    13	../mk-query-digest:1609 0.84664 93741: my $event = { @properties };
    14	../mk-query-digest:1614 0.78265 93741: last EVENT unless @pending;
    15	../mk-query-digest:1537 0.78110 330270: my ( $time ) = $line =~ m/$slow_log_ts_line/o;
    16	../mk-query-digest:1531 0.77013 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    17	../mk-query-digest:1541 0.75358 330270: my ( $db ) = $line =~ m/^use ([^;]+)/;
    18	../mk-query-digest:1744 0.73479 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    19	../mk-query-digest:1539 0.71021 330270: $line =~ m/^# (?:administrator command:.*)$/;
    20	../mk-query-digest:1536 0.64192 330270: do {
    21	../mk-query-digest:1611 0.61970 281223: last unless $event = $callback->($event);
    22	../mk-query-digest:1178 0.60756 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    23	../mk-query-digest:1744 0.55106 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    24	../mk-query-digest:1181 0.51732 46726: $query =~ s{                          # Collapse IN and VALUES lists
    25	../mk-query-digest:1521 0.47207 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    26	../mk-query-digest:1179 0.46686 46726: $query = lc $query;
    27	../mk-query-digest:1522 0.45372 93741: $stmt =~ s/;\n#?\Z//;
    28	../mk-query-digest:1616 0.44034 93720: return $num_events;
    29	../mk-query-digest:1744 0.38530 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    30	../mk-query-digest:1152 0.38296 93741: my ( $self, $query ) = @_;

Revision 3054
35.21user 64.70system 1:41.16elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+97888outputs (0major+15529minor)pagefaults 0swaps
     1	../mk-query-digest:1174 4.02392 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1562 2.23986 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+)/g;
     3	../mk-query-digest:1536 1.73039 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1513 1.34257 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1576 1.24020 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1532 1.13308 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1175 1.10770 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     8	../mk-query-digest:1534 1.08899 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1509 0.99290 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1166 0.87422 46726: $query =~ s/$olc_re//go;
    11	../mk-query-digest:1601 0.86007 93741: my $event = { @properties };
    12	../mk-query-digest:1606 0.80436 93741: last EVENT unless @pending;
    13	../mk-query-digest:1563 0.77678 187482: push @properties, @temp;
    14	../mk-query-digest:1531 0.76501 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1736 0.67098 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    16	../mk-query-digest:1603 0.60987 281223: last unless $event = $callback->($event);
    17	../mk-query-digest:1178 0.59815 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    18	../mk-query-digest:1736 0.53952 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    19	../mk-query-digest:1181 0.50897 46726: $query =~ s{                          # Collapse IN and VALUES lists
    20	../mk-query-digest:1521 0.45519 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    21	../mk-query-digest:1608 0.45455 93720: return $num_events;
    22	../mk-query-digest:1522 0.44807 93741: $stmt =~ s/;\n#?\Z//;
    23	../mk-query-digest:1179 0.42984 46726: $query = lc $query;
    24	../mk-query-digest:1736 0.38952 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    25	../mk-query-digest:1152 0.37946 93741: my ( $self, $query ) = @_;
    26	../mk-query-digest:1736 0.36860 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    27	../mk-query-digest:1499 0.36015 93720: my ( $self, $fh, $misc, @callbacks ) = @_;
    28	../mk-query-digest:1503 0.35839 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    29	../mk-query-digest:1550 0.34534 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    30	../mk-query-digest:3705 0.34060 93741: return $event;

Revision 3054
0.77user 0.95system 0:01.75elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+1392outputs (0major+6287minor)pagefaults 0swaps
     1	../mk-query-digest:1963 0.05902 26054: if ( $vals->[$i] ) {
     2	../mk-query-digest:1971 0.05132 16804: $bucket_95 = $i;
     3	../mk-query-digest:1983 0.03649 17022: my $val = $vals->[$i];
     4	../mk-query-digest:1972 0.03640 16804: last if $vals->[$i];
     5	../mk-query-digest:1984 0.03483 17022: if ( $val ) {
     6	../mk-query-digest:1563 0.03166 13050: push @properties, map { s/(\.[0-9]+)\.[0-9]+$/$1/; $_ } @temp;
     7	../mk-query-digest:1562 0.02729 1004: my (undef, @temp) = split(/:?\s+/, $line);
     8	../mk-query-digest:1513 0.01624 502: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     9	../mk-query-digest:1181 0.01556 406: $query =~ s{                          # Collapse IN and VALUES lists
    10	../mk-query-digest:3964 0.01508 1: exit;
    11	../mk-query-digest:1174 0.01451 406: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
    12	../mk-query-digest:2306 0.01246 22: map { $distro[$buck_tens[$_]] += $vals->[$_] } (0 .. @$vals - 1);
    13	../mk-query-digest:1536 0.01218 2238: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
    14	../mk-query-digest:2137 0.01101 1: my $mem = `ps -o rss,vsz $PID`;
    15	../mk-query-digest:1576 0.00931 2238: if ( !$found_arg && $pos == $len ) {
    16	../mk-query-digest:1532 0.00849 2737: my $line = $1;          # Necessary for /g and pos() to work.
    17	../mk-query-digest:1736 0.00848 500: [at line 21 inside eval] exists $class->{all} or $class->{all} = [ @buckets ];
    18	../mk-query-digest:1736 0.00840 500: [at line 74 inside eval] exists $class->{all} or $class->{all} = [ @buckets ];
    19	../mk-query-digest:1736 0.00839 500: [at line 46 inside eval] exists $class->{all} or $class->{all} = [ @buckets ];
    20	../mk-query-digest:1736 0.00835 500: [at line 99 inside eval] exists $class->{all} or $class->{all} = [ @buckets ];
    21	../mk-query-digest:1534 0.00827 2737: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    22	../mk-query-digest:1509 0.00727 491: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    23	../mk-query-digest:1166 0.00651 406: $query =~ s/$olc_re//go;
    24	../mk-query-digest:1907 0.00573 22: return @buck_tens if @buck_tens;
    25	../mk-query-digest:1601 0.00572 502: my $event = { @properties };
    26	../mk-query-digest:1531 0.00572 2737: $pos     = pos($stmt);  # Be careful not to mess this up!
    27	../mk-query-digest:416 0.00491 510: next unless $para =~ m/^=head1 OPTIONS/;
    28	../mk-query-digest:1606 0.00488 501: last EVENT unless @pending;
    29	../mk-query-digest:1736 0.00484 500: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    30	../mk-query-digest:1872 0.00477 7: my $sub = eval join("\n", @lines);

Revision 3054
39.53user 73.10system 1:53.71elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+112176outputs (0major+15537minor)pagefaults 0swaps
     1	../mk-query-digest:1563 5.46387 2435800: push @properties, map { s/(\.[0-9]+)\.[0-9]+$/$1/; $_ } @temp;
     2	../mk-query-digest:1562 4.49148 187482: my (undef, @temp) = split(/:?\s+/, $line);
     3	../mk-query-digest:1174 3.77860 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     4	../mk-query-digest:1536 1.72791 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     5	../mk-query-digest:1513 1.37002 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     6	../mk-query-digest:1579 1.32459 330270: if ( !$found_arg && $pos == $len ) {
     7	../mk-query-digest:1175 1.10444 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     8	../mk-query-digest:1532 1.09259 377133: my $line = $1;          # Necessary for /g and pos() to work.
     9	../mk-query-digest:1534 1.07157 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    10	../mk-query-digest:1509 0.99497 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    11	../mk-query-digest:1604 0.92018 93741: my $event = { @properties };
    12	../mk-query-digest:1609 0.89261 93741: last EVENT unless @pending;
    13	../mk-query-digest:1166 0.87933 46726: $query =~ s/$olc_re//go;
    14	../mk-query-digest:1531 0.80632 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1739 0.67486 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    16	../mk-query-digest:1606 0.61456 281223: last unless $event = $callback->($event);
    17	../mk-query-digest:1564 0.61154 187482: if ( @temp % 2 ) {
    18	../mk-query-digest:1178 0.60194 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1739 0.53962 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    20	../mk-query-digest:1181 0.51272 46726: $query =~ s{                          # Collapse IN and VALUES lists
    21	../mk-query-digest:1521 0.46334 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    22	../mk-query-digest:1611 0.44811 93720: return $num_events;
    23	../mk-query-digest:1522 0.44570 93741: $stmt =~ s/;\n#?\Z//;
    24	../mk-query-digest:1179 0.43886 46726: $query = lc $query;
    25	../mk-query-digest:1739 0.38938 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    26	../mk-query-digest:1152 0.38499 93741: my ( $self, $query ) = @_;
    27	../mk-query-digest:1739 0.37918 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    28	../mk-query-digest:1503 0.37720 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    29	../mk-query-digest:3708 0.34697 93741: return $event;
    30	../mk-query-digest:1550 0.34391 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;

Revision 3054
36.45user 66.70system 1:44.38elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+100648outputs (0major+15532minor)pagefaults 0swaps
     1	../mk-query-digest:1174 3.71732 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1564 2.22319 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+)/g;
     3	../mk-query-digest:1538 1.82760 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1514 1.38461 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1578 1.29027 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1175 1.14770 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     7	../mk-query-digest:1533 1.14614 377133: my $line = $1;          # Necessary for /g and pos() to work.
     8	../mk-query-digest:1536 1.12886 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1510 1.03345 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1609 0.92417 93741: last EVENT unless @pending;
    11	../mk-query-digest:1604 0.88559 93741: my $event = { @properties };
    12	../mk-query-digest:1166 0.88404 46726: $query =~ s/$olc_re//go;
    13	../mk-query-digest:1532 0.78401 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    14	../mk-query-digest:1565 0.76973 187482: push @properties, @temp;
    15	../mk-query-digest:1534 0.69062 377133: MKDEBUG && _d($line);
    16	../mk-query-digest:1739 0.68850 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    17	../mk-query-digest:1606 0.63416 281223: last unless $event = $callback->($event);
    18	../mk-query-digest:1178 0.60003 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1739 0.54100 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    20	../mk-query-digest:1181 0.51380 46726: $query =~ s{                          # Collapse IN and VALUES lists
    21	../mk-query-digest:1522 0.45868 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    22	../mk-query-digest:1523 0.45346 93741: $stmt =~ s/;\n#?\Z//;
    23	../mk-query-digest:1611 0.45152 93720: return $num_events;
    24	../mk-query-digest:1179 0.43732 46726: $query = lc $query;
    25	../mk-query-digest:1504 0.39582 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    26	../mk-query-digest:1152 0.38975 93741: my ( $self, $query ) = @_;
    27	../mk-query-digest:1739 0.38687 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    28	../mk-query-digest:1739 0.38396 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    29	../mk-query-digest:3708 0.35541 93741: return $event;
    30	../mk-query-digest:1552 0.34669 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;

Revision 3054
36.71user 67.40system 1:45.15elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+101032outputs (0major+15541minor)pagefaults 0swaps
     1	../mk-query-digest:1174 3.75305 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1564 2.32057 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     3	../mk-query-digest:1538 1.75176 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1514 1.38922 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1578 1.28494 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1533 1.17514 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1175 1.12074 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     8	../mk-query-digest:1536 1.07524 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1510 1.03589 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1604 0.90687 93741: my $event = { @properties };
    11	../mk-query-digest:1166 0.90522 46726: $query =~ s/$olc_re//go;
    12	../mk-query-digest:1609 0.86040 93741: last EVENT unless @pending;
    13	../mk-query-digest:1565 0.81376 187482: push @properties, @temp;
    14	../mk-query-digest:1532 0.78135 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1534 0.69046 377133: MKDEBUG && _d($line);
    16	../mk-query-digest:1739 0.68199 93740: [at line 4 inside eval] my $temp = $self->{result_class}->{ $group_by };
    17	../mk-query-digest:1606 0.62483 281223: last unless $event = $callback->($event);
    18	../mk-query-digest:1178 0.60903 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1739 0.54897 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    20	../mk-query-digest:1181 0.52290 46726: $query =~ s{                          # Collapse IN and VALUES lists
    21	../mk-query-digest:1523 0.47841 93741: $stmt =~ s/;\n#?\Z//;
    22	../mk-query-digest:1522 0.46651 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    23	../mk-query-digest:1611 0.45130 93720: return $num_events;
    24	../mk-query-digest:1179 0.44301 46726: $query = lc $query;
    25	../mk-query-digest:1739 0.39984 93740: [at line 151 inside eval] ++$class->{unq}->{$val};
    26	../mk-query-digest:1152 0.39645 93741: my ( $self, $query ) = @_;
    27	../mk-query-digest:1739 0.39335 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    28	../mk-query-digest:1504 0.37312 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    29	../mk-query-digest:3708 0.35778 93741: return $event;
    30	../mk-query-digest:1552 0.34835 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;

Revision 3066
36.18user 65.78system 1:42.70elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+97544outputs (0major+15529minor)pagefaults 0swaps
     1	../mk-query-digest:1174 3.75972 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1564 2.34822 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     3	../mk-query-digest:1538 1.76806 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1514 1.37417 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1578 1.28177 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1533 1.17273 377133: my $line = $1;          # Necessary for /g and pos() to work.
     7	../mk-query-digest:1175 1.12448 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     8	../mk-query-digest:1536 1.09792 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1510 1.01415 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1609 0.93046 93741: last EVENT unless @pending;
    11	../mk-query-digest:1166 0.89543 46726: $query =~ s/$olc_re//go;
    12	../mk-query-digest:1604 0.88899 93741: my $event = { @properties };
    13	../mk-query-digest:1565 0.80605 187482: push @properties, @temp;
    14	../mk-query-digest:1532 0.77883 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1534 0.69724 377133: MKDEBUG && _d($line);
    16	../mk-query-digest:1738 0.69218 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    17	../mk-query-digest:1606 0.63070 281223: last unless $event = $callback->($event);
    18	../mk-query-digest:1178 0.62495 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1738 0.54918 93740: [at line 6 inside eval] my @st_fc = @{$temp}{@attrs};
    20	../mk-query-digest:1181 0.53258 46726: $query =~ s{                          # Collapse IN and VALUES lists
    21	../mk-query-digest:1522 0.46736 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    22	../mk-query-digest:1523 0.46175 93741: $stmt =~ s/;\n#?\Z//;
    23	../mk-query-digest:1611 0.45304 93720: return $num_events;
    24	../mk-query-digest:1179 0.44252 46726: $query = lc $query;
    25	../mk-query-digest:1738 0.41351 93740: [at line 144 inside eval] ++$class->{unq}->{$val};
    26	../mk-query-digest:1152 0.40834 93741: my ( $self, $query ) = @_;
    27	../mk-query-digest:1738 0.40425 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    28	../mk-query-digest:1504 0.38130 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    29	../mk-query-digest:1552 0.36466 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    30	../mk-query-digest:1180 0.35789 46726: $query =~ s/\bnull\b/?/g;             # Get rid of NULLs

Revision 3086
35.98user 63.35system 1:40.92elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
200inputs+97184outputs (1major+15544minor)pagefaults 0swaps
     1	../mk-query-digest:1205 3.72488 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1595 2.35083 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     3	../mk-query-digest:1569 1.76651 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1545 1.37067 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1609 1.28301 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1206 1.12119 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     7	../mk-query-digest:1564 1.10946 377133: my $line = $1;          # Necessary for /g and pos() to work.
     8	../mk-query-digest:1567 1.09761 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1541 1.01572 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1640 0.91944 93741: last EVENT unless @pending;
    11	../mk-query-digest:1197 0.89002 46726: $query =~ s/$olc_re//go;
    12	../mk-query-digest:1635 0.88103 93741: my $event = { @properties };
    13	../mk-query-digest:1596 0.79486 187482: push @properties, @temp;
    14	../mk-query-digest:1563 0.77655 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1565 0.68835 377133: MKDEBUG && _d($line);
    16	../mk-query-digest:1768 0.68565 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    17	../mk-query-digest:1637 0.63442 281223: last unless $event = $callback->($event);
    18	../mk-query-digest:1209 0.63341 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1212 0.51437 46726: $query =~ s{                          # Collapse IN and VALUES lists
    20	../mk-query-digest:1553 0.46454 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    21	../mk-query-digest:1554 0.46051 93741: $stmt =~ s/;\n#?\Z//;
    22	../mk-query-digest:1642 0.45722 93720: return $num_events;
    23	../mk-query-digest:1210 0.44665 46726: $query = lc $query;
    24	../mk-query-digest:3781 0.40130 93741: return $event;
    25	../mk-query-digest:1183 0.39428 93741: my ( $self, $query ) = @_;
    26	../mk-query-digest:1768 0.39044 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    27	../mk-query-digest:1768 0.38457 93740: [at line 143 inside eval] ++$class->{unq}->{$val};
    28	../mk-query-digest:1583 0.37592 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    29	../mk-query-digest:1535 0.37238 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    30	../mk-query-digest:1531 0.34157 93720: my ( $self, $fh, $misc, @callbacks ) = @_;

Revision 3086
35.73user 63.11system 1:39.88elapsed 98%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+97184outputs (0major+15532minor)pagefaults 0swaps
     1	../mk-query-digest:1205 3.68132 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:1595 2.32032 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     3	../mk-query-digest:1569 1.74595 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     4	../mk-query-digest:1545 1.34415 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     5	../mk-query-digest:1609 1.26711 330270: if ( !$found_arg && $pos == $len ) {
     6	../mk-query-digest:1206 1.14104 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     7	../mk-query-digest:1564 1.10363 377133: my $line = $1;          # Necessary for /g and pos() to work.
     8	../mk-query-digest:1567 1.07662 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
     9	../mk-query-digest:1541 0.99871 93720: while ( defined($stmt = shift @pending) or defined($stmt = <$fh>) ) {
    10	../mk-query-digest:1640 0.90989 93741: last EVENT unless @pending;
    11	../mk-query-digest:1197 0.88071 46726: $query =~ s/$olc_re//go;
    12	../mk-query-digest:1635 0.86017 93741: my $event = { @properties };
    13	../mk-query-digest:1596 0.78338 187482: push @properties, @temp;
    14	../mk-query-digest:1563 0.76766 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    15	../mk-query-digest:1565 0.68187 377133: MKDEBUG && _d($line);
    16	../mk-query-digest:1767 0.67239 93740: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    17	../mk-query-digest:1637 0.61703 281223: last unless $event = $callback->($event);
    18	../mk-query-digest:1209 0.60900 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    19	../mk-query-digest:1212 0.50746 46726: $query =~ s{                          # Collapse IN and VALUES lists
    20	../mk-query-digest:1554 0.45714 93741: $stmt =~ s/;\n#?\Z//;
    21	../mk-query-digest:1553 0.45192 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    22	../mk-query-digest:1642 0.44782 93720: return $num_events;
    23	../mk-query-digest:1210 0.42939 46726: $query = lc $query;
    24	../mk-query-digest:1183 0.38735 93741: my ( $self, $query ) = @_;
    25	../mk-query-digest:1767 0.37928 93740: [at line 2 inside eval] my ( $self, $event, $group_by ) = @_;
    26	../mk-query-digest:1535 0.36342 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    27	../mk-query-digest:3780 0.36121 93741: return $event;
    28	../mk-query-digest:1767 0.34437 93740: [at line 143 inside eval] ++$class->{unq}->{$val};
    29	../mk-query-digest:1583 0.34288 93741: push @properties, 'user', $user, 'host', $host, 'ip', $ip;
    30	../mk-query-digest:1531 0.33474 93720: my ( $self, $fh, $misc, @callbacks ) = @_;

Revision 3968
103.29user 0.81system 1:44.26elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
41224inputs+180688outputs (0major+38558minor)pagefaults 0swaps
     1	../mk-query-digest:1541 2.54473 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:3353 2.34062 1313031: my ( $val ) = @_;
     3	../mk-query-digest:3354 1.91682 1313031: return 0 if $val < MIN_BUCK;
     4	../mk-query-digest:3356 1.72709 930335: return $idx > (NUM_BUCK-1) ? (NUM_BUCK-1) : $idx;
     5	../mk-query-digest:3355 1.69463 930335: my $idx = int(BASE_OFFSET + log($val)/BASE_LOG);
     6	../mk-query-digest:2941 1.69384 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     7	../mk-query-digest:2910 1.49508 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     8	../mk-query-digest:3552 1.45858 93741: $_ ne $self->{groupby}
     9	../mk-query-digest:2957 1.01197 330270: if ( !$found_arg && $pos == $len ) {
    10	../mk-query-digest:2885 0.88667 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
    11	../mk-query-digest:1542 0.86285 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
    12	../mk-query-digest:2905 0.84774 377133: my $line = $1;          # Necessary for /g and pos() to work.
    13	../mk-query-digest:2908 0.79965 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    14	../mk-query-digest:3200 0.76123 93689: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    15	../mk-query-digest:3200 0.69731 93689: [at line 6 inside eval] $samples->{$group_by} ||= $event;
    16	../mk-query-digest:2987 0.66916 93741: my $event = { @properties };
    17	../mk-query-digest:2880 0.63399 93720: while ( $$oktorun
    18	../mk-query-digest:2992 0.59229 93741: last EVENT unless @pending;
    19	../mk-query-digest:2942 0.54845 187482: push @properties, @temp;
    20	../mk-query-digest:2904 0.52890 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    21	../mk-query-digest:2906 0.44040 377133: MKDEBUG && _d($line);
    22	../mk-query-digest:2989 0.42803 281223: last unless $event = $callback->($event);
    23	../mk-query-digest:1545 0.39533 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    24	../mk-query-digest:1548 0.38259 46726: $query =~ s{                          # Collapse IN and VALUES lists
    25	../mk-query-digest:2894 0.34965 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    26	../mk-query-digest:2895 0.33510 93741: $stmt =~ s/;\n#?\Z//;
    27	../mk-query-digest:2994 0.33469 93720: return $num_events;
    28	../mk-query-digest:2874 0.31739 93720: local $INPUT_RECORD_SEPARATOR = ";\n#";
    29	../mk-query-digest:1533 0.31091 46726: $query =~ s/$olc_re//go;
    30	../mk-query-digest:3448 0.28618 221000: next BUCKET unless $val; 

Revision 3977
49.53user 95.68system 2:26.08elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
197720inputs+164696outputs (7major+22734minor)pagefaults 0swaps
     1	../mk-query-digest:1541 3.76135 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:3353 2.91481 1125549: my ( $val ) = @_;
     3	../mk-query-digest:3354 2.46198 1125549: return 0 if $val < MIN_BUCK;
     4	../mk-query-digest:2941 2.31301 187482: my @temp = $line =~ m/(\w+):\s+(\d+(?:\.\d+)?|\S+|\Z)/g;
     5	../mk-query-digest:3356 2.10652 742855: return $idx > (NUM_BUCK-1) ? (NUM_BUCK-1) : $idx;
     6	../mk-query-digest:3355 2.06059 742855: my $idx = int(BASE_OFFSET + log($val)/BASE_LOG);
     7	../mk-query-digest:3552 1.92780 93741: $_ ne $self->{groupby}
     8	../mk-query-digest:2910 1.77815 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     9	../mk-query-digest:2885 1.39370 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
    10	../mk-query-digest:2957 1.23800 330270: if ( !$found_arg && $pos == $len ) {
    11	../mk-query-digest:1542 1.12864 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
    12	../mk-query-digest:2905 1.11266 377133: my $line = $1;          # Necessary for /g and pos() to work.
    13	../mk-query-digest:2880 1.10897 93720: while ( $$oktorun
    14	../mk-query-digest:2908 1.09185 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    15	../mk-query-digest:1533 0.88742 46726: $query =~ s/$olc_re//go;
    16	../mk-query-digest:2987 0.88547 93741: my $event = { @properties };
    17	../mk-query-digest:2992 0.86569 93741: last EVENT unless @pending;
    18	../mk-query-digest:2942 0.79679 187482: push @properties, @temp;
    19	../mk-query-digest:2904 0.77595 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    20	../mk-query-digest:2906 0.70145 377133: MKDEBUG && _d($line);
    21	../mk-query-digest:3200 0.67988 93689: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    22	../mk-query-digest:2989 0.62496 281223: last unless $event = $callback->($event);
    23	../mk-query-digest:3200 0.61908 93689: [at line 6 inside eval] $samples->{$group_by} ||= $event;
    24	../mk-query-digest:1545 0.60987 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    25	../mk-query-digest:1548 0.52842 46726: $query =~ s{                          # Collapse IN and VALUES lists
    26	../mk-query-digest:2894 0.48541 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    27	../mk-query-digest:2895 0.45104 93741: $stmt =~ s/;\n#?\Z//;
    28	../mk-query-digest:2994 0.43831 93720: return $num_events;
    29	../mk-query-digest:3447 0.42721 202000: my $val = $vals->[$bucket];
    30	../mk-query-digest:3448 0.42448 202000: next BUCKET unless $val; 

Revision 5122
50.49user 102.91system 2:34.39elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
196064inputs+174600outputs (2major+22966minor)pagefaults 0swaps
     1	../mk-query-digest:1572 3.78212 46726: $query =~ s/[0-9+-][0-9a-f.xb+-]*/?/g;# Anything vaguely resembling numbers
     2	../mk-query-digest:3637 3.10597 1218655: return 0 if $val < MIN_BUCK;
     3	../mk-query-digest:3636 3.10292 1218655: my ( $val ) = @_;
     4	../mk-query-digest:3162 2.06139 187482: my @temp = $line =~ m/(\w+):\s+(\S+|\Z)/g;
     5	../mk-query-digest:3131 1.79355 330270: if ( !$got_ts && (my ( $time ) = $line =~ m/$slow_log_ts_line/o)) {
     6	../mk-query-digest:3106 1.38672 93741: if ( $stmt =~ s/$slow_log_hd_line//go ){ # Throw away header lines in log
     7	../mk-query-digest:3178 1.23343 330270: if ( !$found_arg && $pos == $len ) {
     8	../mk-query-digest:1573 1.14376 46726: $query =~ s/[xb.+-]\?/?/g;            # Clean up leftovers
     9	../mk-query-digest:3101 1.12644 93720: while ( $$oktorun
    10	../mk-query-digest:3126 1.12543 377133: my $line = $1;          # Necessary for /g and pos() to work.
    11	../mk-query-digest:3129 1.11025 377133: if ($line =~ m/^(?:#|use |SET (?:last_insert_id|insert_id|timestamp))/o) {
    12	../mk-query-digest:3210 1.05509 468705: last unless $event = $callback->($event);
    13	../mk-query-digest:3639 1.03071 355325: return $idx > (NUM_BUCK-1) ? (NUM_BUCK-1) : $idx;
    14	../mk-query-digest:3638 1.02047 355325: my $idx = int(BASE_OFFSET + log($val)/BASE_LOG);
    15	../mk-query-digest:8451 1.00178 374576: [at line 6 inside eval] if ( exists $event->{'Schema'} ) { $event->{'db'} = $event->{'Schema'}; delete $event->{'Schema'}; return $event; }
    16	../mk-query-digest:1564 0.91311 46726: $query =~ s/$olc_re//go;
    17	../mk-query-digest:3208 0.88985 93741: my $event = { @properties };
    18	../mk-query-digest:3213 0.87218 93741: last EVENT unless @pending;
    19	../mk-query-digest:3125 0.78998 377133: $pos     = pos($stmt);  # Be careful not to mess this up!
    20	../mk-query-digest:3163 0.76158 187482: push @properties, @temp;
    21	../mk-query-digest:3474 0.69913 92741: [at line 138 inside eval] $val =~ s/^(\d+(?:\.\d+)?).*/$1/;
    22	../mk-query-digest:3127 0.69169 377133: MKDEBUG && _d($line);
    23	../mk-query-digest:3474 0.68716 92741: [at line 5 inside eval] ||= { map { $_ => { } } @attrs };
    24	../mk-query-digest:3474 0.61473 92741: [at line 6 inside eval] $samples->{$group_by} ||= $event;
    25	../mk-query-digest:1576 0.60142 46726: $query =~ tr[ \n\t\r\f][ ]s;          # Collapse whitespace
    26	../mk-query-digest:1579 0.51590 46726: $query =~ s{                          # Collapse IN and VALUES lists
    27	../mk-query-digest:8467 0.48483 185708: [at line 4 inside eval] if ( defined $event->{'ts'} ) { $prev->{'ts'} = $event->{'ts'} } else { $event->{'ts'} = $prev->{'ts'}; }
    28	../mk-query-digest:3115 0.48441 93741: $stmt = '#' . $stmt unless $stmt =~ m/\A#/;
    29	../mk-query-digest:3116 0.44507 93741: $stmt =~ s/;\n#?\Z//;
    30	../mk-query-digest:3215 0.44112 93720: return $num_events;
